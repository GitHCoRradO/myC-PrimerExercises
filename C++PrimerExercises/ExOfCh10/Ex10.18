void biggies(vector<string> &words, vector<string>::size_type sz) {
	elimDups(words);
	stable_sort(words.begin(), words.end(), [](const string &a, const string &b) { return a.size() < b.size(); });
	auto wc = partition(words.begin(), words.end(), [sz](const string &str) { return str.size() < sz; });
	auto cnt = words.end() - wc;
	cout << cnt << " " << make_plural(cnt, "word", "s") << " of length " << sz << " or longer" << endl;
	for_each(wc, words.end(), [](const string &s) { cout << s << " "; });
	cout << endl;
}
